{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","React","useState","isADBEnabled","setAdbEnabled","isStatusBarHide","setStatusBarHide","customCommand","setCustomCommand","customCommandResult","setCustomCommandResult","baseUrl","setBaseUrl","useEffect","axios","defaults","baseURL","get","then","res","data","style","marginTop","labelCol","span","autoComplete","Item","label","Group","compact","width","value","onChange","e","target","type","onClick","post","commandList","icon","UpCircleTwoTone","marginLeft","LeftCircleTwoTone","DownCircleTwoTone","RightCircleTwoTone","color","title","onConfirm","params","enable","isEnabled","hidden","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef32dea5.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport './App.css';\nimport {Button, Col, Form, Input, Popconfirm, Row, Tag} from \"antd\";\nimport {UpCircleTwoTone, LeftCircleTwoTone, DownCircleTwoTone, RightCircleTwoTone} from \"@ant-design/icons\"\nimport axios from \"axios\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nconst App = () => {\n    const [isADBEnabled, setAdbEnabled] = React.useState(false)\n    const [isStatusBarHide, setStatusBarHide] = React.useState(false)\n    const [customCommand, setCustomCommand] = React.useState(\"\")\n    const [customCommandResult, setCustomCommandResult] = React.useState(\"\")\n    const [baseUrl, setBaseUrl] = React.useState(\"https://tablet.ss.devwu.com:8443\")\n    useEffect(() => {\n        axios.defaults.baseURL = baseUrl\n        axios.get(\"/api/adb\"\n        ).then(res => {\n            setAdbEnabled(res.data.data)\n        })\n        axios.get(\"/api/statusBar\").then(res => {\n            setStatusBarHide(!res.data.data)\n        })\n    })\n    return (\n        <Form\n            style={{marginTop: \"20px\"}}\n            labelCol={{span: 8}}\n            autoComplete=\"off\">\n            <Form.Item label={\"服务器 IP\"}>\n                <Input.Group compact>\n                    <Input style={{width: 'calc( 100% - 200px)'}} value={baseUrl}\n                           onChange={(e) => {\n                               setBaseUrl(e.target.value)\n                           }}/>\n                    <Button type={\"primary\"} onClick={() => {\n                        axios.defaults.baseURL = baseUrl\n                    }}>Submit</Button>\n                </Input.Group>\n            </Form.Item>\n            {/*<Form.Item label={\"实时画面(仅查看)\"}>*/}\n            {/*    <Image src={\"http://\" + baseUrl + \":8080/stream.mjpeg\"}/>*/}\n            {/*</Form.Item>*/}\n            <Form.Item label={\"操作按钮\"}>\n                <Button onClick={() => {\n                    axios.post(\"/api/execCommand\", {\n                        commandList: [\"su\", \"-c\", \"input keyevent 4\"]\n                    }).then()\n                }}>Back</Button>\n                <Button onClick={() => {\n                    axios.post(\"/api/execCommand\", {\n                        commandList: [\"su\", \"-c\", \"input keyevent 3\"]\n                    }).then()\n                }}>Home</Button>\n                <Button onClick={() => {\n                    axios.post(\"/api/execCommand\", {\n                        commandList: [\"su\", \"-c\", \"input keyevent 187\"]\n                    }).then()\n                }}>Recent Tasks</Button>\n            </Form.Item>\n            <Form.Item label={\"模拟滑动\"}>\n                <Row>\n                    <Button icon={<UpCircleTwoTone/>} style={{\n                        width: \"120px\",\n                        marginLeft: \"120px\"\n                    }} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input swipe 200 900 200 300\"]\n                        }).then()\n                    }}>Swipe Up</Button>\n                </Row>\n                <Row>\n                    <Button icon={<LeftCircleTwoTone/>} style={{width: \"120px\"}} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input swipe 500 200 100 200\"]\n                        }).then()\n                    }}>Swipe Left</Button>\n                    <Button icon={<DownCircleTwoTone/>} style={{width: \"120px\"}} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input swipe 200 300 200 800\"]\n                        }).then()\n                    }}>Swipe Down</Button>\n                    <Button icon={<RightCircleTwoTone/>} style={{width: \"120px\"}} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input swipe 100 200 500 200\"]\n                        }).then()\n                    }}>Swipe Right</Button>\n                </Row>\n            </Form.Item>\n            <Form.Item label={\"方向按键\"}>\n                <Row>\n                    <Button icon={<UpCircleTwoTone/>} style={{\n                        width: \"120px\",\n                        marginLeft: \"120px\"\n                    }} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input keyevent 19\"]\n                        }).then()\n                    }}>Dpad Up</Button>\n                </Row>\n                <Row>\n                    <Button icon={<LeftCircleTwoTone/>} style={{width: \"120px\"}} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input keyevent 21\"]\n                        }).then()\n                    }}>Dpad Left</Button>\n                    <Button icon={<DownCircleTwoTone/>} style={{width: \"120px\"}} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input keyevent 20\"]\n                        }).then()\n                    }}>Dpad Down</Button>\n                    <Button icon={<RightCircleTwoTone/>} style={{width: \"120px\"}} onClick={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: [\"su\",\"-c\",\"input keyevent 22\"]\n                        }).then()\n                    }}>Dpad Right</Button>\n                </Row>\n            </Form.Item>\n\n            <Form.Item label=\"远程 ABD 状态\">\n                {isADBEnabled ?\n                    <Tag color={\"success\"}>已开启</Tag>\n                    : <Tag color={\"error\"}>未开启</Tag>}\n            </Form.Item>\n            <Form.Item label=\"ADB 开关\">\n                <Popconfirm title={isADBEnabled ? \"关闭 ADB\" : \"开启 ADB\"}\n                            onConfirm={() => {\n                                axios.post(\"/api/adb\", null, {\n                                    params: {\n                                        enable: !isADBEnabled\n                                    }\n                                }).then(res => {\n                                    setAdbEnabled(res.data.data.isEnabled)\n                                })\n                            }}>\n                    <Button type=\"primary\">{isADBEnabled ? \"点击关闭 ADB\" : \"点击开启 ADB\"}</Button>\n                </Popconfirm>\n            </Form.Item>\n            <Form.Item label=\"状态栏隐藏状态\">\n                {isStatusBarHide ?\n                    <Tag color={\"error\"}>隐藏中</Tag>\n                    : <Tag color={\"success\"}>未隐藏</Tag>}\n            </Form.Item>\n            <Form.Item label=\"状态栏开关\">\n                <Popconfirm title={isStatusBarHide ? \"显示状态栏\" : \"隐藏状态栏\"}\n                            onConfirm={() => {\n                                axios.post(\"/api/statusBar\", null, {\n                                    params: {\n                                        hidden: !isStatusBarHide\n                                    }\n                                }).then(res => {\n                                    setStatusBarHide(!res.data.data)\n                                })\n                            }}>\n                    <Button type=\"primary\">{isStatusBarHide ? \"点击显示状态栏\" : \"点击隐藏状态栏\"}</Button>\n                </Popconfirm>\n            </Form.Item>\n            <Form.Item label=\"远程重启\">\n                <Popconfirm title=\"确定要重启吗？\" onConfirm={() => axios.get(\"/api/reboot\")}>\n                    < Button type=\"primary\">点击重启平板</Button>\n                </Popconfirm>\n            </Form.Item>\n            <Form.Item label=\"执行自定义命令\">\n                <Input.Group compact>\n                    <Input value={customCommand} onChange={e => setCustomCommand(e.target.value)}/>\n                    <Popconfirm title=\"确认执行\" onConfirm={() => {\n                        axios.post(\"/api/execCommand\", {\n                            commandList: customCommand\n                        }).then(res => {\n                            setCustomCommandResult(res.data.data)\n                        })\n                    }}>\n                        <Button>点击执行命令</Button>\n                    </Popconfirm>\n                </Input.Group>\n            </Form.Item>\n            <Form.Item label={\"自定义命令输出\"}>\n                <Col span={16}>\n                    <Input.Group compact>\n                        <Button onClick={() => setCustomCommandResult(\"\")}> Clear </Button>\n                        <TextArea value={customCommandResult} disabled/>\n                    </Input.Group>\n                </Col>\n\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}